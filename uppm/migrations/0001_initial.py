# Generated by Django 2.2.10 on 2020-03-12 19:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Le numero de telephone doit contenir 10 chiffres', regex='^\\d{9,10}$')])),
                ('date_registration', models.DateTimeField(editable=False, verbose_name='Date de cr√©ation')),
                ('inscrit_newsletter', models.BooleanField(default=False, verbose_name="J'accepte de recevoir des emails de UPPM")),
                ('accepter_conditions', models.BooleanField(default=False, verbose_name="J'ai lu et j'accepte les conditions d'utilisation du site")),
                ('accepter_annuaire', models.BooleanField(default=True, verbose_name="J'accepte d'apparaitre dans l'annuaire du site et la carte et rend mon profil visible par tous")),
                ('date_notifications', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de validation des notifications')),
                ('statut_adhesion', models.IntegerField(choices=[('', '-----------'), (0, 'Je souhaite devenir membre du collectif ACVI et utiliser le site'), (1, "Je suis membre d'un autre collectif du uppm pour la transition"), (2, 'Je suis membre du collectif ACVI')], default='0')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de parution')),
                ('date_dernierMessage', models.DateTimeField(auto_now=True, verbose_name='Date de Modification')),
                ('dernierMessage', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('profil1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profil1', to=settings.AUTH_USER_MODEL)),
                ('profil2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profil2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_dernierMessage',),
            },
        ),
        migrations.CreateModel(
            name='InscriptionNewsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('date_inscription', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
            ],
        ),
        migrations.CreateModel(
            name='Suivis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_suivi', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MessageGeneral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uppm.Conversation')),
            ],
        ),
    ]
